/**
 * @file Firestore Security Rules
 * @description This ruleset configures access control for a school management application.
 *
 * Core Philosophy:
 * The application is currently configured for public read and write access, due to the user request to disable authentication.
 *
 * Data Structure:
 * The Firestore database contains collections for institutions, departments, students, attendances, evaluation criteria, grades, and professor profiles.
 * There are no user-scoped subcollections.
 *
 * Key Security Decisions:
 * All read and write operations are currently open to all users, including unauthenticated users.
 *
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows read and write access to the institutions collection for all users.
     * @path /institutions/{institutionId}
     * @allow (get, list, create, update, delete) Any user can read or write institution data.
     * @principle Grants public access to institution data.
     */
    match /institutions/{institutionId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to the departments collection for all users.
     * @path /departments/{departmentId}
     * @allow (get, list, create, update, delete) Any user can read or write department data.
     * @principle Grants public access to department data.
     */
    match /departments/{departmentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to the students collection for all users.
     * @path /students/{studentId}
     * @allow (get, list, create, update, delete) Any user can read or write student data.
     * @principle Grants public access to student data.
     */
    match /students/{studentId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to the attendances collection for all users.
     * @path /attendances/{attendanceId}
     * @allow (get, list, create, update, delete) Any user can read or write attendance data.
     * @principle Grants public access to attendance data.
     */
    match /attendances/{attendanceId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to the evaluation_criteria collection for all users.
     * @path /evaluation_criteria/{evaluationCriteriaId}
     * @allow (get, list, create, update, delete) Any user can read or write evaluation criteria data.
     * @principle Grants public access to evaluation criteria data.
     */
    match /evaluation_criteria/{evaluationCriteriaId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to the grades collection for all users.
     * @path /grades/{gradeId}
     * @allow (get, list, create, update, delete) Any user can read or write grade data.
     * @principle Grants public access to grade data.
     */
    match /grades/{gradeId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Allows read and write access to the professor_profile collection for all users.
     * @path /professor_profile/{profileId}
     * @allow (get, list, create, update, delete) Any user can read or write professor profile data.
     * @principle Grants public access to professor profile data.
     */
    match /professor_profile/{profileId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}